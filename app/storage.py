
# Phase 3: SQLite + SQLAlchemy models for idempotency, balances, cases
# from sqlalchemy import create_engine, Column, String, Float, Integer, JSON, DateTime
# engine = create_engine("sqlite:///./data.db", future=True)
# Base = declarative_base()
# class Idempotency(Base): ...
# class Balance(Base): ...
# class Case(Base): ...
